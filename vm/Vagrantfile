# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don"t change it unless you know what
# you"re doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Disksize
  config.disksize.size = "30GB"

  ###################################################################
  # Single machine
  ###################################################################
  # config.vm.hostname = "devops"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.99.99"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # config.ssh.private_key_path = "chave privada"
  # config.ssh.host = "172.17.177.40"
  # config.ssh.port = 22

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # config.vm.network :forwarded_port, guest: 3000, host: 3000    # rails
  # config.vm.network :forwarded_port, guest: 9292, host: 9292    # rack
  # config.vm.network :forwarded_port, guest: 4567, host: 4567    # sinatra
  # config.vm.network :forwarded_port, guest: 1080, host: 1080    # mailcatcher
  # config.vm.network :forwarded_port, guest: 8888, host: 8888    # jasmine
  # config.vm.network :forwarded_port, guest: 3306, host: 3306    # mysql
  # config.vm.network :forwarded_port, guest: 1234, host: 1234    # node
  # config.vm.network :forwarded_port, guest: 5432, host: 5432    # postgresql 1
  # config.vm.network :forwarded_port, guest: 5433, host: 5433    # postgresql 2
  # config.vm.network :forwarded_port, guest: 5480, host: 5480    # postgresql 3
  # config.vm.network :forwarded_port, guest: 6379, host: 6379    # redis
  # config.vm.network :forwarded_port, guest: 9200, host: 9200    # elasticsearch
  # config.vm.network :forwarded_port, guest: 27017, host: 27017  # mongodb
  # config.vm.network :forwarded_port, guest: 80, host: 8080      # apache/nginx

  # config.vm.network :forwarded_port, guest: 5672, host: 5672    # rabbitmq
  # config.vm.network :forwarded_port, guest: 15672, host: 15672  # rabbitmq

  # config.vm.network :forwarded_port, guest: 8384, host: 8384    # Syncthing

  # config.vm.network :forwarded_port, guest: 80, host: 80
  # config.vm.network :forwarded_port, guest: 443, host: 443
  # config.vm.network :forwarded_port, guest: 8080, host: 8080

  # config.vm.network :forwarded_port, guest: 8761, host: 8761 # JHipster Registry

  # HTTP port forwarding - X <= X + 2000
  # config.vm.network :forwarded_port, guest: 80,  host: 2080
  # config.vm.network :forwarded_port, guest: 443, host: 2443

  # DNS forwarding - X <= X (until I move this back onto host OS)
  # config.vm.network :forwarded_port, guest: 53,  host: 53   # DNS

  # Email port forwarding: X <= X
  # config.vm.network :forwarded_port, guest: 25,  host: 25   # SMTP
  # config.vm.network :forwarded_port, guest: 110, host: 110  # POP3
  # config.vm.network :forwarded_port, guest: 143, host: 143  # IMAP
  # config.vm.network :forwarded_port, guest: 465, host: 465  # Secure SMTP (SSMTP)
  # config.vm.network :forwarded_port, guest: 585, host: 585  # Secure IMAP (IMAP4-SSL)
  # config.vm.network :forwarded_port, guest: 587, host: 587  # Secure SMTP (TLS)
  # config.vm.network :forwarded_port, guest: 993, host: 993  # IMAP4 over SSL
  # config.vm.network :forwarded_port, guest: 995, host: 995  # Secure POP3 (SSL-POP)

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    ## Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    #
    ## Customize the amount of memory on the VM:
    vb.memory = "2048"
    vb.cpus = 2
  end

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "./", "/home/vagrant/workspace" , :mount_options => ["dmode=777", "fmode=766"]
  # config.vm.synced_folder ".", "/home/vagrant/dev", create: true

  # Enable Dynamic Swap Space to prevent Out of Memory crashes
  # config.vm.provision "shell", inline: "sudo apt update && sudo apt install git swapspace python python3-pip python-dev python3-venv build-essential libssl-dev libffi-dev zip unzip zlib1g-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libpq-dev zsh -y"

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", inline: <<-SHELL
  #SHELL

  # Mysql Part
  #   $script_mysql = <<-SCRIPT
  #     apt-get update && \
  #     apt-get install -y openjdk-8-jdk  mysql-server-5.7 && \
  #     mysql -e "create user 'devops'@'%' identified by 'mestre';"  && \
  #     mysql -e "create user 'devops_dev'@'%' identified by 'mestre';"  && \
  #     mysql -e "create database todo;" && \
  #     mysql -e "create database todo_dev;" && \
  #     mysql -e "create database test_todo_dev;" && \
  #     mysql -e "grant all privileges on *.* to devops@'%' identified by 'mestre';" && \
  #     mysql -e "grant all privileges on *.* to devops_dev@'%' identified by 'mestre';" 
  #   SCRIPT

  # config.vm.provision "shell", inline: $script_mysql
  # config.vm.provision "shell", inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
  # config.vm.provision "shell", inline: "service mysql restart"
  # config.vm.synced_folder "./configs", "/configs"

  # config.vm.provision "shell", :path => "install.sh"
  # config.vm.provision "shell", inline: "sudo chmod +x /vagrant/scripts/*"
  # config.vm.provision "shell", inline: "sudo /vagrant/scripts/util.sh"
  # config.vm.provision "shell", path: "./provision/bootstrap.sh", keep_color: true, privileged: false

  ###################################################################
  # Multiples machines
  # https://www.vagrantup.com/docs/vagrantfile/tips.html
  ###################################################################
  config.vm.define "devops" do |m|
    m.vm.network "private_network", ip: "172.17.177.40"
    m.vm.hostname = "devops"

    m.config.vm.network :forwarded_port, guest: 5432, host: 5432
    m.config.vm.network :forwarded_port, guest: 27017, host: 27017
    m.config.vm.network :forwarded_port, guest: 80, host: 8080

    # Enable Dynamic Swap Space to prevent Out of Memory crashes
    m.config.vm.provision "shell", inline: "sudo apt update && sudo apt install git swapspace python python3-pip python-dev python3-venv build-essential libssl-dev libffi-dev zip unzip zlib1g-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libpq-dev zsh -y"
    m.config.vm.provision "shell", path: "./provision/bootstrap.sh", keep_color: true, privileged: false
  end
end
